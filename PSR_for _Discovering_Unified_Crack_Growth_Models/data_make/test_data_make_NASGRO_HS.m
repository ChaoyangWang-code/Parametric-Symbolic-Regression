%% make NASGRO(H-S)data

%% 
% data_all=[0.1	2.79	2.12	4.02	142.5
% 0.4	2.79	2.12	3.29	142.5
% 0.7	2.79	2.12	2.35	142.5
% 0.8	2.79	2.12	1.82	142.5
% 0.1	3.31	2.42	3.59	57
% 0.1	3.31	2.42	3.36	57
% 0.1	3.31	2.42	1.13	53
% 0.1	3.31	2.42	3.48	53
% 0.1	3.31	2.42	2.57	76
% 0.1	3.31	2.42	3.65	76
% 0.1	2.56	1.98	3.35	100
% 0.1	2.56	1.98	4.34	108
% 0.7	2.56	1.98	1.55	120
% 0.7	2.56	1.98	1.79	120
% 0.7	2.56	1.98	2.51	118
% 0.1	1.67	3.08	2.08	66
% 0.1	1.67	3.08	2.63	69
% 0.1	1.67	3.08	2.38	74
% 0.1	1.67	3.08	2.78	63.1
% 0.1	1.67	3.08	3.4	67
% 0.1	1.52	1.64	3	62
% 0.1	1.52	1.64	3.3	62
% 0.1	1.52	1.64	3.55	62
% 0.1	1.52	1.64	3.2	69
% 0.1	1.52	1.64	3.2	92
% 0.1	1.52	1.64	3.9	59
% 0.1	1.52	1.64	4.67	65
% 0.1	3.36	3.01	5.65	102
% 0.8	3.36	3.01	4.31	57
% 0.1	3.36	3.01	2.73	61.1
% 0.1	3.36	3.01	1.52	61.1
% 0.1	3.36	3.01	1.86	61.1
% 0.1	3.36	3.01	1.15	61.1];

% data_all=[0.1	2.79	2.12	4.02	142.5
% 0.4	2.79	2.12	3.29	142.5
% 0.7	2.79	2.12	2.35	142.5
% 0.8	2.79	2.12	1.82	142.5
% 0.1	2.79	2.12	3.59	57
% 0.1	2.79	2.12	3.36	57
% 0.1	2.79	2.12	1.13	53
% 0.1	2.79	2.12	3.48	53
% 0.1	2.79	2.12	2.57	76
% 0.1	2.79	2.12	3.65	76
% 0.1	2.79	2.12	3.35	100
% 0.1	2.79	2.12	4.34	108
% 0.7	2.79	2.12	1.55	120
% 0.7	2.79	2.12	1.79	120
% 0.7	2.79	2.12	2.51	118
% 0.1	2.79	2.12	2.08	66
% 0.1	2.79	2.12	2.63	69
% 0.1	2.79	2.12	2.38	74
% 0.1	2.79	2.12	2.78	63.1
% 0.1	2.79	2.12	3.4	67
% 0.1	2.79	2.12	3	62
% 0.1	2.79	2.12	3.3	62
% 0.1	2.79	2.12	3.55	62
% 0.1	2.79	2.12	3.2	69
% 0.1	2.79	2.12	3.2	92
% 0.1	2.79	2.12	3.9	59
% 0.1	2.79	2.12	4.67	65
% 0.1	2.79	2.12	5.65	102
% 0.8	2.79	2.12	4.31	57
% 0.1	2.79	2.12	2.73	61.1
% 0.1	2.79	2.12	1.52	61.1
% 0.1	2.79	2.12	1.86	61.1
% 0.1	2.79	2.12	1.15	61.1];
data_all=[
0.1	    2.79	2.12	4.02	87.3
0.4	    2.79	2.12	4.02	87.3
0.7	    2.79	2.12	4.02	87.3
0.8	    2.79	2.12	4.02	87.3
-0.2	2.79	2.12	4.02	87.3
0.2	    2.79	2.12	3.65	76
0.4	    2.79	2.12	3.65	76
0.6	    2.79	2.12	3.65	76
0.1	    2.79	2.12	1.52	61.1
0.7	    2.79	2.12	1.52	61.1
0.01	    1.52	1.64	3	    62
0.1	    1.52	1.64	3	    62
0.3	    1.52	1.64	3	    62
0.6	    1.52	1.64	3	    62
-1.0	1.52	1.64	3	    62
0.2	    3.31	2.42	3.59	57
0.3	    3.31	2.42	3.59	57
0.6	    3.31	2.42	3.59	57
];

%gp.fitness.noise_level=2e-1; 
%gp.fitness.noise_on=1
noise_level =gp.fitness.noise_level;
%figure
for i=1:18
    R=data_all(i,1);
    D=data_all(i,2)*1e-10;
    p=data_all(i,3);
    k1=data_all(i,4);
    k2=data_all(i,5);

    delta_K_temp=log10(k1+0.1):0.02:log10(k2*(1-R));
    delta_K=10.^(delta_K_temp);
    rn=size(delta_K,2);
    
    K_max=delta_K/(1-R);
    dadN=D.*( (delta_K-k1) ./(1-K_max/k2).^0.5  ).^p;

    if gp.fitness.noise_on==1
        noise = noise_level * randn(1, rn); 
        dadN_temp=log10(dadN)+noise;
    else
        dadN_temp=log10(dadN);
    end

    dadN=10.^(dadN_temp);
    figure(i)
    plot(log10(delta_K),log10(dadN),'o')
    hold on; grid on;
    n_delta_K=size(delta_K,2);
    Rn=R*ones(n_delta_K,1);
    testdata_temp{1,i}=[delta_K',dadN',Rn,K_max'];
end
for i = 1:5
    testdata_temp{2,i} = 1;
end
for i = 6:8
    testdata_temp{2,i} = 2;
end
for i = 9:10
    testdata_temp{2,i} = 3;
end
for i = 11:15
    testdata_temp{2,i} = 4;
end
for i = 16:18
    testdata_temp{2,i} = 5;
end
disp(['number of test data:    ' num2str(size(testdata_temp,2))]);







